user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Define the upstream server (our API)
    upstream currency-converter-api {
        server api:8080;
        # No need to list individual containers, Docker's internal DNS will resolve the "api" service name
        # to all running containers, and nginx will load balance between them
    }

    server {
        listen       80;
        server_name  localhost;

        # Health check endpoint for Nginx
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
        }

        # Forward API requests to the backend
        location / {
            proxy_pass http://currency-converter-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add headers for rate limiting and request correlation
            proxy_set_header Request-Id $request_id;
            
            # Add headers for debugging/tracing
            add_header X-Upstream $upstream_addr;
        }

        # Health check endpoint for the API
        location /health {
            proxy_pass http://currency-converter-api/health;
        }

        # Error handling
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
